<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>today-i-learned on Justin MK Lam | Blog</title><link>http://justinmklam.com/tags/today-i-learned/</link><description>Recent content in today-i-learned on Justin MK Lam | Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Nov 2022 12:31:53 -0800</lastBuildDate><atom:link href="http://justinmklam.com/tags/today-i-learned/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Google Cloud Pubsub for Batch Pipelines in Apache Beam</title><link>http://justinmklam.com/posts/2022/11/apache-beam-pubsub/</link><pubDate>Wed, 23 Nov 2022 12:31:53 -0800</pubDate><guid>http://justinmklam.com/posts/2022/11/apache-beam-pubsub/</guid><description>Google Cloud&amp;rsquo;s Pub/Sub is a useful service that provides an asynchronous and scalable messaging platform that decouples services producing messages from those that receive and process those messages. When combined with Apache Beam (and/or Dataflow, Google&amp;rsquo;s managed version of it), you can quickly develop powerful batch and streaming pipelines for data-parallel processing.
However, I recently ran into one slight hiccup - although Apache Beam has a built-in IO connector for pubsub, it only supported streaming pipelines (at the time of development).</description></item><item><title>Tips and Tricks with Terraform's null_resource</title><link>http://justinmklam.com/posts/2022/05/terraform-null-resource/</link><pubDate>Tue, 17 May 2022 20:21:37 -0800</pubDate><guid>http://justinmklam.com/posts/2022/05/terraform-null-resource/</guid><description>Terraform&amp;rsquo;s null_resource resource can be useful when there aren&amp;rsquo;t any existing modules to satisfy your needs (with some caveats). Hashicorp&amp;rsquo;s documentation for it is a bit lacking, but fortunately there&amp;rsquo;s more information about the provisioners in their other docs here. After using these resources in a handful of places across our infrastructure deployments, I&amp;rsquo;ve developed a small collection of tips I picked up over the past few months that I thought I&amp;rsquo;d share.</description></item><item><title>Deploying Google Cloud Functions with Terraform</title><link>http://justinmklam.com/posts/2022/03/deploy-cloud-functions-terraform/</link><pubDate>Tue, 08 Mar 2022 11:47:29 -0800</pubDate><guid>http://justinmklam.com/posts/2022/03/deploy-cloud-functions-terraform/</guid><description>&lt;p>Cloud Functions are an easy, performant, and potentially inexpensive way to build serverless backends. I recently went down the route of setting up continuous deployments for them, and thought I&amp;rsquo;d share my learnings with it.&lt;/p></description></item></channel></rss>